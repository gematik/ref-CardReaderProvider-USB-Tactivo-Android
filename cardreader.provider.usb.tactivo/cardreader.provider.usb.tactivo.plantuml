@startuml

title __CARDREADER.PROVIDER.USB.TACTIVO's Class Diagram__\n

  namespace de.gematik.ti.cardreader.provider.usb.tactivo {
    class de.gematik.ti.cardreader.provider.usb.tactivo.BuildConfig {
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.tactivo {
    class de.gematik.ti.cardreader.provider.usb.tactivo.BuildConfig {
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.tactivo {
    namespace control {
      class de.gematik.ti.cardreader.provider.usb.tactivo.control.TactivoCallback {
      }
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.tactivo {
    namespace control {
      class de.gematik.ti.cardreader.provider.usb.tactivo.control.TactivoCardChecker {
      }
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.tactivo {
    namespace control {
      class de.gematik.ti.cardreader.provider.usb.tactivo.control.TactivoCardReaderController {
      }
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.tactivo {
    namespace control {
      class de.gematik.ti.cardreader.provider.usb.tactivo.control.TactivoCardReaderProvider {
      }
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.tactivo {
    namespace entities {
      class de.gematik.ti.cardreader.provider.usb.tactivo.entities.TactivoCard {
      }
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.tactivo {
    namespace entities {
      class de.gematik.ti.cardreader.provider.usb.tactivo.entities.TactivoCardChannel {
      }
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.tactivo {
    namespace entities {
      class de.gematik.ti.cardreader.provider.usb.tactivo.entities.TactivoCardReader {
      }
    }
  }
  

  de.gematik.ti.cardreader.provider.usb.tactivo.control.TactivoCallback .up.|> com.precisebiometrics.android.mtk.api.PBInitializedCallback
  de.gematik.ti.cardreader.provider.usb.tactivo.control.TactivoCallback -up-|> android.content.BroadcastReceiver
  de.gematik.ti.cardreader.provider.usb.tactivo.control.TactivoCallback o-- de.gematik.ti.cardreader.provider.usb.tactivo.control.TactivoCardReaderController : controller
  de.gematik.ti.cardreader.provider.usb.tactivo.control.TactivoCardReaderController -up-|> de.gematik.ti.openhealthcard.common.AbstractAndroidCardReaderController
  de.gematik.ti.cardreader.provider.usb.tactivo.control.TactivoCardReaderController o-- de.gematik.ti.cardreader.provider.usb.tactivo.control.TactivoCallback : callback
  de.gematik.ti.cardreader.provider.usb.tactivo.control.TactivoCardReaderProvider .up.|> de.gematik.ti.cardreader.provider.spi.ICardReaderControllerProvider
  de.gematik.ti.cardreader.provider.usb.tactivo.entities.TactivoCard .up.|> de.gematik.ti.cardreader.provider.api.card.ICard
  de.gematik.ti.cardreader.provider.usb.tactivo.entities.TactivoCardChannel .up.|> de.gematik.ti.cardreader.provider.api.card.ICardChannel
  de.gematik.ti.cardreader.provider.usb.tactivo.entities.TactivoCardChannel o-- de.gematik.ti.cardreader.provider.usb.tactivo.entities.TactivoCard : tactivoCard
  de.gematik.ti.cardreader.provider.usb.tactivo.entities.TactivoCardReader .up.|> de.gematik.ti.cardreader.provider.api.ICardReader


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
