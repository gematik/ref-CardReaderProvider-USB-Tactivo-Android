@startuml



  namespace de.gematik.ti.cardreader.provider.usb.tactivo {
    namespace entities {
      class de.gematik.ti.cardreader.provider.usb.tactivo.entities.TactivoCard {
          - atr : Atr
          - channel : CardChannel
          - preciseATR : ATR
          - preciseATRbyte : byte[]
          - preciseCard : Card
          + TactivoCard()
          + beginExclusive()
          + disconnect()
          + endExclusive()
          + getATR()
          + getBasicChannel()
          + getProtocol()
          + openBasicChannel()
          + openLogicalChannel()
          + transmitControlCommand()
      }
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.tactivo {
    namespace entities {
      class de.gematik.ti.cardreader.provider.usb.tactivo.entities.TactivoCardChannel {
          {static} - CARDREADER_BUFFER : String
          {static} - CARD_MAXAPDUBUFFERSIZE : String
          {static} - CARD_MAXRESPAPDUBUFFERSIZE : String
          {static} - LOG : Logger
          {static} - bufferSizeConfig : Map<String, Integer>
          - preciseChannel : CardChannel
          + close()
          + getCard()
          + getChannelNumber()
          + getMaxMessageLength()
          + getMaxResponseLength()
          + isExtendedLengthSupported()
          + transmit()
          + transmit()
          ~ TactivoCardChannel()
      }
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.tactivo {
    namespace entities {
      class de.gematik.ti.cardreader.provider.usb.tactivo.entities.TactivoCardReader {
          {static} - PROTOCOL_T1 : String
          - preciseCard : Card
          - preciseTerminal : CardTerminal
          + TactivoCardReader()
          + connect()
          + getName()
          + initialize()
          + isCardPresent()
          + isInitialized()
          + waitForCardAbsent()
          + waitForCardPresent()
      }
    }
  }
  

  de.gematik.ti.cardreader.provider.usb.tactivo.entities.TactivoCard .up.|> de.gematik.ti.cardreader.provider.api.card.ICard
  de.gematik.ti.cardreader.provider.usb.tactivo.entities.TactivoCardChannel .up.|> de.gematik.ti.cardreader.provider.api.card.ICardChannel
  de.gematik.ti.cardreader.provider.usb.tactivo.entities.TactivoCardChannel o-- de.gematik.ti.cardreader.provider.usb.tactivo.entities.TactivoCard : tactivoCard
  de.gematik.ti.cardreader.provider.usb.tactivo.entities.TactivoCardReader .up.|> de.gematik.ti.cardreader.provider.api.ICardReader









@enduml
